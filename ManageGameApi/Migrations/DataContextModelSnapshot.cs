// <auto-generated />
using ManageGameApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ManageGameApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ManageGameApi.Domain.Entities.Friend", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<long>("UserManageId")
                        .HasColumnType("bigint")
                        .HasColumnName("usermanageid");

                    b.HasKey("Id");

                    b.HasIndex("UserManageId");

                    b.ToTable("friend");

                    b.HasData(
                        new
                        {
                            Id = 90L,
                            Name = "Jhon Dean",
                            UserManageId = 100L
                        },
                        new
                        {
                            Id = 91L,
                            Name = "Derick Jhonson",
                            UserManageId = 100L
                        });
                });

            modelBuilder.Entity("ManageGameApi.Domain.Entities.Game", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<long>("UserManageId")
                        .HasColumnType("bigint")
                        .HasColumnName("usermanageid");

                    b.HasKey("Id");

                    b.HasIndex("UserManageId");

                    b.ToTable("game");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Name = "God of War",
                            UserManageId = 100L
                        },
                        new
                        {
                            Id = 101L,
                            Name = "Derick Jhonson",
                            UserManageId = 100L
                        });
                });

            modelBuilder.Entity("ManageGameApi.Domain.Entities.LocateGame", b =>
                {
                    b.Property<long>("GameId")
                        .HasColumnType("bigint")
                        .HasColumnName("gameid");

                    b.Property<long>("FriendId")
                        .HasColumnType("bigint")
                        .HasColumnName("friendid");

                    b.Property<long>("UserManageId")
                        .HasColumnType("bigint")
                        .HasColumnName("usermanageid");

                    b.HasKey("GameId", "FriendId");

                    b.HasIndex("UserManageId");

                    b.ToTable("locategame");

                    b.HasData(
                        new
                        {
                            GameId = 100L,
                            FriendId = 90L,
                            UserManageId = 100L
                        });
                });

            modelBuilder.Entity("ManageGameApi.Domain.Entities.UserManage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("usermanage");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Email = "admin",
                            Password = "admin",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("ManageGameApi.Domain.Entities.Friend", b =>
                {
                    b.HasOne("ManageGameApi.Domain.Entities.UserManage", "UserManage")
                        .WithMany("Friends")
                        .HasForeignKey("UserManageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserManage");
                });

            modelBuilder.Entity("ManageGameApi.Domain.Entities.Game", b =>
                {
                    b.HasOne("ManageGameApi.Domain.Entities.UserManage", "UserManage")
                        .WithMany("Games")
                        .HasForeignKey("UserManageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserManage");
                });

            modelBuilder.Entity("ManageGameApi.Domain.Entities.LocateGame", b =>
                {
                    b.HasOne("ManageGameApi.Domain.Entities.UserManage", "UserManage")
                        .WithMany("LocateGames")
                        .HasForeignKey("UserManageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserManage");
                });

            modelBuilder.Entity("ManageGameApi.Domain.Entities.UserManage", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("Games");

                    b.Navigation("LocateGames");
                });
#pragma warning restore 612, 618
        }
    }
}
